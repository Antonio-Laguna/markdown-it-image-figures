{"version":3,"file":"markdown-it-images-figures.module.js","sources":["../src/index.js"],"sourcesContent":["'use strict';\n\nfunction removeAttributeFromList(attrs, attribute) {\n  const arr = Array.isArray(attrs) ? attrs : [];\n\n  return arr.filter(([k]) => k !== attribute);\n}\n\nfunction removeAttributeFromImage(image, attribute) {\n  if (image && image.attrs) {\n    image.attrs = removeAttributeFromList(image.attrs, attribute);\n  }\n}\n\nmodule.exports = function imageFiguresPlugin(md, options) {\n  options = options || {};\n\n  function imageFigures(state) {\n    // reset tabIndex on md.render()\n    let tabIndex = 1;\n\n    // do not process first and last token\n    for (let i = 1, l = state.tokens.length; i < (l - 1); ++i) {\n      const token = state.tokens[i];\n\n      if (token.type !== 'inline') {\n        continue;\n      }\n      // children: image alone, or link_open -> image -> link_close\n      if (!token.children || (token.children.length !== 1 && token.children.length !== 3)) {\n        continue;\n      }\n      // one child, should be img\n      if (token.children.length === 1 && token.children[0].type !== 'image') {\n        continue;\n      }\n      // three children, should be image enclosed in link\n      if (token.children.length === 3) {\n        const [childrenA, childrenB, childrenC] = token.children;\n        const isEnclosed = childrenA.type !== 'link_open' ||\n          childrenB.type !== 'image' ||\n          childrenC.type !== 'link_close';\n\n        if (isEnclosed) {\n          continue;\n        }\n      }\n      // prev token is paragraph open\n      if (i !== 0 && state.tokens[i - 1].type !== 'paragraph_open') {\n        continue;\n      }\n      // next token is paragraph close\n      if (i !== (l - 1) && state.tokens[i + 1].type !== 'paragraph_close') {\n        continue;\n      }\n\n      // We have inline token containing an image only.\n      // Previous token is paragraph open.\n      // Next token is paragraph close.\n      // Lets replace the paragraph tokens with figure tokens.\n      const figure = state.tokens[i - 1];\n      figure.type = 'figure_open';\n      figure.tag = 'figure';\n      state.tokens[i + 1].type = 'figure_close';\n      state.tokens[i + 1].tag = 'figure';\n\n      if (options.dataType) {\n        state.tokens[i - 1].attrPush(['data-type', 'image']);\n      }\n      let image;\n\n      if (options.link && token.children.length === 1) {\n        [image] = token.children;\n        const link = new state.Token('link_open', 'a', 1);\n        link.attrPush(['href', image.attrGet('src')]);\n\n        token.children.unshift(link);\n        token.children.push(new state.Token('link_close', 'a', -1));\n      }\n\n      // for linked images, image is one off\n      image = token.children.length === 1 ? token.children[0] : token.children[1];\n\n      if (options.figcaption) {\n        let figCaption;\n        const captionObj = image.attrs.find(([k]) => k === 'title');\n\n        if (Array.isArray(captionObj)) {\n          figCaption = captionObj[1];\n        }\n\n        if (figCaption) {\n          const [captionContent] = md.parseInline(figCaption, state.env);\n          token.children.push(\n            new state.Token('figcaption_open', 'figcaption', 1)\n          );\n          token.children.push(...captionContent.children);\n          token.children.push(\n            new state.Token('figcaption_close', 'figcaption', -1)\n          );\n\n          if (image.attrs) {\n            image.attrs = removeAttributeFromList(image.attrs, 'title');\n          }\n        }\n      }\n\n      if (options.copyAttrs && image.attrs) {\n        const f = options.copyAttrs === true ? '' : options.copyAttrs;\n        // Copying so any further changes aren't duplicated\n        figure.attrs = image.attrs\n          .filter(([k]) => k.match(f))\n          .map(a => Array.from(a));\n      }\n\n      if (options.tabindex) {\n        // add a tabindex property\n        // you could use this with css-tricks.com/expanding-images-html5\n        state.tokens[i - 1].attrPush(['tabindex', tabIndex]);\n        tabIndex++;\n      }\n\n      if (options.lazy) {\n        const lazyClass = typeof options.lazy === 'string' ? options.lazy : 'lazy';\n        const src = image.attrs.find(([k]) => k === 'src');\n        image.attrs.push(['data-src', src[1]]);\n        removeAttributeFromImage(image, 'src');\n\n        let hasClass = false;\n\n        for (let j = 0, length = image.attrs.length; j < length && !hasClass; j++) {\n          const attrPair = image.attrs[j];\n\n          if (attrPair[0] === 'class') {\n            attrPair[1] = `${attrPair[1]} ${lazyClass}`;\n            hasClass = true;\n          }\n        }\n\n        if (!hasClass) {\n          image.attrs.push(['class', lazyClass]);\n        }\n\n        image.attrs.push(['loading', 'lazy']);\n      }\n    }\n  }\n\n  md.core.ruler.before('linkify', 'image_figures', imageFigures);\n};\n"],"names":["removeAttributeFromList","attrs","attribute","Array","isArray","filter","k","removeAttributeFromImage","image","module","exports","md","options","core","ruler","before","state","tabIndex","i","l","tokens","length","token","type","children","childrenA","childrenB","childrenC","figure","tag","dataType","attrPush","link","Token","attrGet","unshift","push","figcaption","figCaption","captionObj","find","captionContent","parseInline","env","copyAttrs","f","match","map","a","from","tabindex","lazy","lazyClass","src","hasClass","j","attrPair"],"mappings":"AAEA,SAASA,EAAwBC,EAAOC,GAGtC,OAFYC,MAAMC,QAAQH,GAASA,EAAQ,IAEhCI,OAAO,EAAEC,KAAOA,IAAMJ,GAGnC,SAASK,EAAyBC,EAAON,GACnCM,GAASA,EAAMP,QACjBO,EAAMP,MAAQD,EAAwBQ,EAAMP,MAAOC,IAIvDO,OAAOC,QAAU,SAA4BC,EAAIC,GAC/CA,EAAUA,GAAW,GAqIrBD,EAAGE,KAAKC,MAAMC,OAAO,UAAW,gBAnIhC,SAAsBC,GAEpB,IAAIC,EAAW,EAGf,IAAK,IAAIC,EAAI,EAAGC,EAAIH,EAAMI,OAAOC,OAAQH,EAAKC,EAAI,IAAMD,EAAG,CACzD,MAAMI,EAAQN,EAAMI,OAAOF,GAE3B,GAAmB,WAAfI,EAAMC,KACR,SAGF,IAAKD,EAAME,UAAuC,IAA1BF,EAAME,SAASH,QAA0C,IAA1BC,EAAME,SAASH,OACpE,SAGF,GAA8B,IAA1BC,EAAME,SAASH,QAA2C,UAA3BC,EAAME,SAAS,GAAGD,KACnD,SAGF,GAA8B,IAA1BD,EAAME,SAASH,OAAc,CAC/B,MAAOI,EAAWC,EAAWC,GAAaL,EAAME,SAKhD,GAJsC,cAAnBC,EAAUF,MACR,UAAnBG,EAAUH,MACS,eAAnBI,EAAUJ,KAGV,SAIJ,GAAU,IAANL,GAAwC,mBAA7BF,EAAMI,OAAOF,EAAI,GAAGK,KACjC,SAGF,GAAIL,IAAOC,EAAI,GAAmC,oBAA7BH,EAAMI,OAAOF,EAAI,GAAGK,KACvC,SAOF,MAAMK,EAASZ,EAAMI,OAAOF,EAAI,GAShC,IAAIV,EAEJ,GAVAoB,EAAOL,KAAO,cACdK,EAAOC,IAAM,SACbb,EAAMI,OAAOF,EAAI,GAAGK,KAAO,eAC3BP,EAAMI,OAAOF,EAAI,GAAGW,IAAM,SAEtBjB,EAAQkB,UACVd,EAAMI,OAAOF,EAAI,GAAGa,SAAS,CAAC,YAAa,UAIzCnB,EAAQoB,MAAkC,IAA1BV,EAAME,SAASH,OAAc,EAC9Cb,GAASc,EAAME,SAChB,MAAMQ,EAAO,IAAIhB,EAAMiB,MAAM,YAAa,IAAK,GAC/CD,EAAKD,SAAS,CAAC,OAAQvB,EAAM0B,QAAQ,SAErCZ,EAAME,SAASW,QAAQH,GACvBV,EAAME,SAASY,KAAK,IAAIpB,EAAMiB,MAAM,aAAc,KAAM,IAM1D,GAFAzB,EAAkC,IAA1Bc,EAAME,SAASH,OAAeC,EAAME,SAAS,GAAKF,EAAME,SAAS,GAErEZ,EAAQyB,WAAY,CACtB,IAAIC,EACJ,MAAMC,EAAa/B,EAAMP,MAAMuC,KAAK,EAAElC,KAAa,UAANA,GAM7C,GAJIH,MAAMC,QAAQmC,KAChBD,EAAaC,EAAW,IAGtBD,EAAY,CACd,MAAOG,GAAkB9B,EAAG+B,YAAYJ,EAAYtB,EAAM2B,KAC1DrB,EAAME,SAASY,KACb,IAAIpB,EAAMiB,MAAM,kBAAmB,aAAc,IAEnDX,EAAME,SAASY,QAAQK,EAAejB,UACtCF,EAAME,SAASY,KACb,IAAIpB,EAAMiB,MAAM,mBAAoB,cAAe,IAGjDzB,EAAMP,QACRO,EAAMP,MAAQD,EAAwBQ,EAAMP,MAAO,WAKzD,GAAIW,EAAQgC,WAAapC,EAAMP,MAAO,CACpC,MAAM4C,GAA0B,IAAtBjC,EAAQgC,UAAqB,GAAKhC,EAAQgC,UAEpDhB,EAAO3B,MAAQO,EAAMP,MAClBI,OAAO,EAAEC,KAAOA,EAAEwC,MAAMD,IACxBE,IAAIC,GAAK7C,MAAM8C,KAAKD,IAUzB,GAPIpC,EAAQsC,WAGVlC,EAAMI,OAAOF,EAAI,GAAGa,SAAS,CAAC,WAAYd,IAC1CA,KAGEL,EAAQuC,KAAM,CAChB,MAAMC,EAAoC,iBAAjBxC,EAAQuC,KAAoBvC,EAAQuC,KAAO,OAC9DE,EAAM7C,EAAMP,MAAMuC,KAAK,EAAElC,KAAa,QAANA,GACtCE,EAAMP,MAAMmC,KAAK,CAAC,WAAYiB,EAAI,KAClC9C,EAAyBC,EAAO,OAEhC,IAAI8C,GAAW,EAEf,IAAK,IAAIC,EAAI,EAAGlC,EAASb,EAAMP,MAAMoB,OAAQkC,EAAIlC,IAAWiC,EAAUC,IAAK,CACzE,MAAMC,EAAWhD,EAAMP,MAAMsD,GAET,UAAhBC,EAAS,KACXA,EAAS,GAAM,GAAEA,EAAS,MAAMJ,IAChCE,GAAW,GAIVA,GACH9C,EAAMP,MAAMmC,KAAK,CAAC,QAASgB,IAG7B5C,EAAMP,MAAMmC,KAAK,CAAC,UAAW"}